generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  phone           String   @unique
  password        String
  name            String?
  isAdmin         Boolean  @default(false) @map("is_admin")
  age             Int?
  gender          Gender?
  region          Region?
  userImageOrigin String?  @map("user_image_origin")
  userImageRecord String?  @map("user_image_record")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  audioTrainingFiles AudioTrainingFile[]

  @@map("users")
}

model AudioTrainingFile {
  id                Int            @id @default(autoincrement())
  userId            Int            @map("user_id")
  filePath          String         @map("file_path") @db.VarChar(500)
  contentVietnamese String?        @map("content_vietnamese") @db.Text
  contentKorean     String?        @map("content_korean") @db.Text
  trainingStatus    TrainingStatus @default(pending) @map("training_status")
  rejectionReason   String?        @map("rejection_reason") @db.Text
  createdAt         DateTime       @default(now()) @map("created_at")
  updatedAt         DateTime       @updatedAt @map("updated_at")

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("audio_training_files")
}

enum Gender {
  M @map("M")
  F @map("F")
  O @map("O")
}

enum Region {
  N @map("N")
  M @map("M")
  S @map("S")
}

enum TrainingStatus {
  pending  @map("pending")
  approved @map("approved")
  rejected @map("rejected")
}
